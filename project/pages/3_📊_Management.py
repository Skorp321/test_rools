import streamlit as st
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from auth import authenticate_user, check_page_access, show_access_denied, logout

st.set_page_config(page_title="Management", page_icon="üìä")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
if not authenticate_user():
    st.stop()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
if not check_page_access("Management"):
    show_access_denied()
    st.stop()

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
with st.sidebar:
    st.markdown(f"### –ú–µ–Ω–µ–¥–∂–µ—Ä: {st.session_state['current_user']}")
    st.markdown(f"**–†–æ–ª—å:** {st.session_state['user_role']}")
    
    if st.button("–í—ã–π—Ç–∏"):
        logout()
        st.switch_page("../main.py")
    
    st.markdown("---")
    st.markdown("### üìä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    st.info("–î–æ—Å—Ç—É–ø –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é")

# –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è  
st.title("üìä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
st.success("‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!")

# –û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏
st.markdown("### üìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")

col1, col2, col3, col4 = st.columns(4)

with col1:
    st.metric(
        label="–í—ã—Ä—É—á–∫–∞ –∑–∞ –º–µ—Å—è—Ü",
        value="‚ÇΩ125,430",
        delta="12,500"
    )

with col2:
    st.metric(
        label="–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã", 
        value="47",
        delta="5"
    )

with col3:
    st.metric(
        label="–ö–æ–Ω–≤–µ—Ä—Å–∏—è",
        value="3.2%",
        delta="0.5%"
    )

with col4:
    st.metric(
        label="–°—Ä–µ–¥–Ω–∏–π —á–µ–∫",
        value="‚ÇΩ2,670",
        delta="-150"
    )

# –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
tab1, tab2, tab3 = st.tabs(["üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "üë• –ö–ª–∏–µ–Ω—Ç—ã", "‚ö° –û–ø–µ—Ä–∞—Ü–∏–∏"])

with tab1:
    st.markdown("### –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    import random
    import datetime
    
    dates = [datetime.date.today() - datetime.timedelta(days=i) for i in range(30, 0, -1)]
    sales = [random.randint(1000, 5000) for _ in dates]
    
    chart_data = {"–î–∞—Ç–∞": dates, "–ü—Ä–æ–¥–∞–∂–∏ (‚ÇΩ)": sales}
    st.line_chart(chart_data, x="–î–∞—Ç–∞", y="–ü—Ä–æ–¥–∞–∂–∏ (‚ÇΩ)")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### üéØ –¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        products = {
            "–¢–æ–≤–∞—Ä –ê": 1240,
            "–¢–æ–≤–∞—Ä –ë": 890, 
            "–¢–æ–≤–∞—Ä –í": 720,
            "–¢–æ–≤–∞—Ä –ì": 450,
            "–¢–æ–≤–∞—Ä –î": 320
        }
        
        for product, sales in products.items():
            st.metric(product, f"‚ÇΩ{sales:,}")
    
    with col2:
        st.markdown("#### üåç –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º")
        regions_data = {
            "–†–µ–≥–∏–æ–Ω": ["–ú–æ—Å–∫–≤–∞", "–°–ü–±", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"],
            "–ü—Ä–æ–¥–∞–∂–∏": [45000, 32000, 18000, 15000, 12000]
        }
        st.bar_chart(regions_data, x="–†–µ–≥–∏–æ–Ω", y="–ü—Ä–æ–¥–∞–∂–∏")

with tab2:
    st.markdown("### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏")
    
    # –§–∏–ª—å—Ç—Ä—ã
    col1, col2, col3 = st.columns(3)
    
    with col1:
        status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞", ["–í—Å–µ", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", "VIP"])
    
    with col2:
        region_filter = st.selectbox("–†–µ–≥–∏–æ–Ω", ["–í—Å–µ", "–ú–æ—Å–∫–≤–∞", "–°–ü–±", "–†–µ–≥–∏–æ–Ω—ã"])
    
    with col3:
        period_filter = st.selectbox("–ü–µ—Ä–∏–æ–¥", ["–ó–∞ –º–µ—Å—è—Ü", "–ó–∞ –∫–≤–∞—Ä—Ç–∞–ª", "–ó–∞ –≥–æ–¥"])
    
    # –¢–∞–±–ª–∏—Ü–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
    st.markdown("#### –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤")
    
    clients_data = {
        "–ö–ª–∏–µ–Ω—Ç": ["–û–û–û –ê–ª—å—Ñ–∞", "–ò–ü –ò–≤–∞–Ω–æ–≤", "–û–û–û –ë–µ—Ç–∞", "–û–û–û –ì–∞–º–º–∞"],
        "–°—Ç–∞—Ç—É—Å": ["VIP", "–ê–∫—Ç–∏–≤–Ω—ã–π", "–ê–∫—Ç–∏–≤–Ω—ã–π", "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π"],
        "–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫": ["‚ÇΩ125,000", "‚ÇΩ45,000", "‚ÇΩ78,000", "‚ÇΩ12,000"],
        "–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∫—É–ø–∫–∞": ["2024-01-18", "2024-01-15", "2024-01-10", "2023-12-20"]
    }
    
    st.dataframe(clients_data, use_container_width=True)
    
    # –î–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
    st.markdown("#### –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"):
            st.success("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
    
    with col2:
        if st.button("üìû –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–≤–æ–Ω–∫–∏"):
            st.success("–ó–≤–æ–Ω–∫–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!")
    
    with col3:
        if st.button("üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"):
            st.success("–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!")

with tab3:
    st.markdown("### –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
            with st.spinner("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."):
                import time
                time.sleep(2)
                st.success("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        
        if st.button("üìä –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏"):
            with st.spinner("–ü–µ—Ä–µ—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫..."):
                import time
                time.sleep(1)
                st.success("–ú–µ—Ç—Ä–∏–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã!")
        
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à"):
            st.success("–ö—ç—à –æ—á–∏—â–µ–Ω!")
        
        if st.button("üìã –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"):
            st.success("–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
    
    with col2:
        st.markdown("#### ‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        
        notifications = [
            {"type": "warning", "message": "–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞ –ê"},
            {"type": "info", "message": "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –û–û–û –ê–ª—å—Ñ–∞"},
            {"type": "success", "message": "–ü–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω"},
            {"type": "error", "message": "–û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –æ–ø–ª–∞—Ç—ã"}
        ]
        
        for notif in notifications:
            if notif["type"] == "warning":
                st.warning(f"‚ö†Ô∏è {notif['message']}")
            elif notif["type"] == "info":
                st.info(f"‚ÑπÔ∏è {notif['message']}")
            elif notif["type"] == "success":
                st.success(f"‚úÖ {notif['message']}")
            elif notif["type"] == "error":
                st.error(f"‚ùå {notif['message']}")