import streamlit as st

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USERS_DB = {
    "admin": {"password": "admin123", "role": "admin"},
    "user": {"password": "user123", "role": "user"},  
    "manager": {"password": "manager123", "role": "manager"}
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –ø–æ —Ä–æ–ª—è–º
PAGE_PERMISSIONS = {
    "Home": ["admin", "user", "manager"],
    "Admin": ["admin"],
    "Management": ["admin", "manager"],
    "User_Profile": ["user", "admin", "manager"]
}

def authenticate_user():
    """–§—É–Ω–∫—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    def password_entered():
        username = st.session_state["username"]
        password = st.session_state["password"]
        
        if username in USERS_DB and USERS_DB[username]["password"] == password:
            st.session_state["password_correct"] = True
            st.session_state["user_role"] = USERS_DB[username]["role"]
            st.session_state["current_user"] = username
            del st.session_state["password"]
        else:
            st.session_state["password_correct"] = False

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if "password_correct" not in st.session_state:
        st.markdown("### üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        
        col1, col2 = st.columns([1, 1])
        with col1:
            st.text_input("–õ–æ–≥–∏–Ω", key="username", placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω")
            st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="password", placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
            st.button("–í–æ–π—Ç–∏", on_click=password_entered, type="primary")
        
        with col2:
            st.markdown("### üë• –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
            st.code("""
admin / admin123
- –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
            
manager / manager123  
- –î–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –ø—Ä–æ—Ñ–∏–ª—é
            
user / user123
- –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ –ø—Ä–æ—Ñ–∏–ª—é
            """)
        
        return False
        
    elif not st.session_state["password_correct"]:
        st.markdown("### üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        st.text_input("–õ–æ–≥–∏–Ω", key="username")
        st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="password")
        st.button("–í–æ–π—Ç–∏", on_click=password_entered)
        st.error("üòï –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
        return False
    else:
        return True

def check_page_access(page_name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
    if "user_role" not in st.session_state:
        return False
    
    user_role = st.session_state["user_role"]
    return user_role in PAGE_PERMISSIONS.get(page_name, [])

def logout():
    """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    for key in list(st.session_state.keys()):
        del st.session_state[key]

def show_access_denied():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫–∞–∑–∞ –≤ –¥–æ—Å—Ç—É–ø–µ"""
    st.error("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
    st.markdown("### –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    
    st.markdown("**–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å:** " + st.session_state.get("user_role", "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"))
    
    if st.button("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é"):
        st.switch_page("main.py")